// Package docs Code generated by swaggo/swag at 2024-03-05 22:17:55.277895 +0800 CST m=+2.658018401. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplateappapi = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "dstgo",
            "url": "https://github.com/dstgo"
        },
        "license": {
            "name": "MIT LICENSE",
            "url": "https://mit-license.org/"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/forgotpwd": {
            "post": {
                "description": "[guest]\nforgot password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "ForgotPassword",
                "parameters": [
                    {
                        "description": "Account ID",
                        "name": "form",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.ForgotPasswordOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "[guest]\nif login success, return jwt token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "comment",
                        "name": "loginBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.Token"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[user]\nuser logout",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/auth/refresh": {
            "get": {
                "description": "[guest]\ncarry refresh token in query params, access token in header\nif refresh-token expired , TokenRefresher will not refresh token [4012]\nelse if access-token has expired after delay duration, TokenRefresher will not refresh token [4012]\nelse if access-token has expired before delay duration, TokenRefresher will issue a new access-token [2005]\nelse if access-token has not expired, TokenRefresher will renewal the 1/10 access-token ttl per time  [2005]\nelse if access-token has not expired, and ttl \u003e= 2 * conf.JwtConf.Exp, TokenRefresher will not refresh token [4013]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Refresh",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh token",
                        "name": "refresh",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/auth.Token"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "description": "[guest]\nuser register api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "comment",
                        "name": "registerBody",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.RegisterOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create dict",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "CreateDict",
                "parameters": [
                    {
                        "description": "DictSaveOption",
                        "name": "DictSaveOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dict.DictSaveOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/data/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "CreateDictData",
                "parameters": [
                    {
                        "description": "DictDataSaveOption",
                        "name": "DictDataSaveOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dict.DictDataSaveOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/data/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "list dict data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "ListDictData",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "if is reverse order",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "size of page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dict.DictDataDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dict/data/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "RemoveDictData",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/data/update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get string by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "UpdateDictData",
                "parameters": [
                    {
                        "description": "DictDataUpdateOption",
                        "name": "DictDataUpdateOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dict.DictDataUpdateOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/info": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "get dict data info by code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "GetDictInfo",
                "parameters": [
                    {
                        "type": "string",
                        "name": "code",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dict.DictDataInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dict/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "list dict pages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "ListDict",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "if is reverse order",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "size of page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dict.DictDetail"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/dict/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "remove dict",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "RemoveDict",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/dict/update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "update dict",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dict"
                ],
                "summary": "UpdateDict",
                "parameters": [
                    {
                        "description": "DictUpdateOption",
                        "name": "DictUpdateOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dict.DictUpdateOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/email/code": {
            "get": {
                "description": "auth code email api",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "email"
                ],
                "summary": "SendCodeEmail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/key/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "create specified user api key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "key"
                ],
                "summary": "CreateAPIKey",
                "parameters": [
                    {
                        "description": "KeyCreateOption",
                        "name": "KeyCreateOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.KeyCreateOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/key/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "list specified user api keys",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "key"
                ],
                "summary": "ListAPIKeys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/auth.APIKey"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/key/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "remove specified api key",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "key"
                ],
                "summary": "RemoveAPIKey",
                "parameters": [
                    {
                        "type": "string",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/perm/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\ncreate a new permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "CreatePermission",
                "parameters": [
                    {
                        "description": "create perm",
                        "name": "createPerm",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreatePermOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/perm/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nGet Permission list by page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "GetPermList",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "if is reverse order",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "admin",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "size of page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "appapi",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/role.PermInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/perm/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nremove the specified permission",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "RemovePermission",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/perm/update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nupdate the specified permission info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "UpdatePermission",
                "parameters": [
                    {
                        "description": "update perm",
                        "name": "updatePermOpt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.UpdatePermOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "[guest]\ntest app api if is accessible",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Ping",
                "parameters": [
                    {
                        "type": "string",
                        "example": "wilson",
                        "description": "name must be one of [wilson, wendy]",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/system.PingReply"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/pong": {
            "get": {
                "description": "[guest]\ntest app api authentication if is work",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "system"
                ],
                "summary": "Pong",
                "parameters": [
                    {
                        "type": "string",
                        "example": "wilson",
                        "description": "name must be one of [wilson, wendy]",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/role/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\ncreate a new role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "CreateRole",
                "parameters": [
                    {
                        "description": "create role",
                        "name": "createRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.CreateRoleOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/role/grant": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\ngrant permissions for the specified role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "GrantRolePerms",
                "parameters": [
                    {
                        "description": "grant role",
                        "name": "GrantOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.GrantOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/role/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nget role list by page",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "GetRoleList",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "if is reverse order",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "admin",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "size of page",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "appapi",
                        "name": "tag",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/role.RoleInfo"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/perms": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nget permissions list belong to role",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "GetRolePerms",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/role.PermGroup"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/role/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nremove a role,and its permission record will be deleted too",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "RemoveRole",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/role/update": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nupdate the specified role info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "role"
                ],
                "summary": "UpdateRole",
                "parameters": [
                    {
                        "description": "update role",
                        "name": "updateRole",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/role.UpdateRoleOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/user/admin/create": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\ncreate new user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "CreateUser",
                "parameters": [
                    {
                        "description": "CreateUserOption",
                        "name": "createOpt",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/user/admin/list": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nget specific user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUserInfoList",
                "parameters": [
                    {
                        "type": "boolean",
                        "example": true,
                        "description": "if is reverse order",
                        "name": "desc",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "email",
                        "description": "specified field",
                        "name": "order",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 1,
                        "description": "page",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "example": "jacklove",
                        "description": "search text, should be of one username or email",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "example": 10,
                        "description": "size of page",
                        "name": "size",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/user.Info"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/user/admin/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nget specified user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetSpecUserInfo",
                "parameters": [
                    {
                        "type": "string",
                        "name": "uuid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nsave specified user information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "SaveUser",
                "parameters": [
                    {
                        "description": "updateInfoOption",
                        "name": "updateInfoOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.SaveUserDetailOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/user/admin/remove": {
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[admin]\nRemove the specific user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "RemoveUser",
                "parameters": [
                    {
                        "type": "string",
                        "name": "uuid",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        },
        "/user/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[user]\nget own user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "GetUserInfo",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/types.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/user.Info"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "[user]\nupdate own user info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "UpdateUserInfo",
                "parameters": [
                    {
                        "description": "updateInfoOption",
                        "name": "updateInfoOption",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateInfoOption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.APIKey": {
            "type": "object",
            "properties": {
                "expiredAt": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "auth.ForgotPasswordOption": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "auth code get from user binding email",
                    "type": "string",
                    "example": "F294484D"
                },
                "password": {
                    "description": "length of the password must be in range [10,30]",
                    "type": "string",
                    "example": "123456789"
                }
            }
        },
        "auth.KeyCreateOption": {
            "type": "object",
            "properties": {
                "expiredAt": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "perms": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "auth.LoginOption": {
            "type": "object",
            "properties": {
                "password": {
                    "description": "length of the password must be in range [10,30]",
                    "type": "string",
                    "example": "0123456789"
                },
                "persistent": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "description": "length of the username must be in range [6,20], and username must be Alphanumeric",
                    "type": "string",
                    "example": "dstadmin"
                }
            }
        },
        "auth.RegisterOption": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "8-digit auth code get from user binding email, and it must be Alphanumeric",
                    "type": "string",
                    "example": "F294484D"
                },
                "password": {
                    "description": "length of the password must be in range [10,30]",
                    "type": "string",
                    "example": "0123456789"
                },
                "persistent": {
                    "type": "boolean",
                    "example": true
                },
                "username": {
                    "description": "length of the username must be in range [6,20], and username must be Alphanumeric",
                    "type": "string",
                    "example": "dstadmin"
                }
            }
        },
        "auth.Token": {
            "type": "object",
            "properties": {
                "refresh": {
                    "description": "refresh token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VybmFtZSI6InN0cmFuZ2VyIiwidXNlcklkIjoiMDA1YjQzOTctOTRjMi00YWZjLWIzNTEtNWIzY2VkNzI4MDkzIiwiaXNzIjoid2lsc29uIiwiZXhwIjoxNjk3MzI0ODY4LCJpYXQiOjE2OTcyODg4NjgsImp0aSI6IjdkZDI4NDZlLTFkZjEtNDBkMS04YmZlLTA3ZGI3ZmE4NmFhYiJ9.HnAaz-WOmugqfdz_oXphsJY_zQl3FCzrtYCm90WJgGU"
                },
                "token": {
                    "description": "access token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VybmFtZSI6InN0cmFuZ2VyIiwidXNlcklkIjoiMDA1YjQzOTctOTRjMi00YWZjLWIzNTEtNWIzY2VkNzI4MDkzIiwiaXNzIjoid2lsc29uIiwiZXhwIjoxNjk3MzI0ODY4LCJpYXQiOjE2OTcyODg4NjgsImp0aSI6IjdkZDI4NDZlLTFkZjEtNDBkMS04YmZlLTA3ZGI3ZmE4NmFhYiJ9.HnAaz-WOmugqfdz_oXphsJY_zQl3FCzrtYCm90WJgGU"
                }
            }
        },
        "dict.DictDataDetail": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer"
                },
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "value": {}
            }
        },
        "dict.DictDataInfo": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "type": {
                    "type": "integer"
                },
                "value": {}
            }
        },
        "dict.DictDataSaveOption": {
            "type": "object",
            "properties": {
                "dictId": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dict.DictDataUpdateOption": {
            "type": "object",
            "properties": {
                "enable": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "type": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "dict.DictDetail": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                }
            }
        },
        "dict.DictSaveOption": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "dict.DictUpdateOption": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "role.CreatePermOption": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "how to access the object",
                    "type": "string",
                    "example": "POST"
                },
                "group": {
                    "description": "permission group",
                    "type": "string",
                    "example": "UserGroup"
                },
                "name": {
                    "type": "string",
                    "example": "updateUser"
                },
                "object": {
                    "description": "define the object will be accessed",
                    "type": "string",
                    "example": "/user/update"
                },
                "tag": {
                    "description": "tag of permission",
                    "type": "string",
                    "example": "AppAPI"
                }
            }
        },
        "role.CreateRoleOption": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "role code, must be alpha numeric",
                    "type": "string",
                    "example": "ADMIN"
                },
                "name": {
                    "description": "role name",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "role.GrantOption": {
            "type": "object",
            "properties": {
                "permId": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "roleId": {
                    "type": "integer",
                    "example": 1
                },
                "tag": {
                    "type": "string",
                    "example": "AppApi"
                }
            }
        },
        "role.PermGroup": {
            "type": "object",
            "properties": {
                "group": {
                    "description": "group name",
                    "type": "string",
                    "example": "user group"
                },
                "perms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.PermInfo"
                    }
                }
            }
        },
        "role.PermInfo": {
            "type": "object",
            "properties": {
                "action": {
                    "description": "how to access the object",
                    "type": "string",
                    "example": "POST"
                },
                "group": {
                    "description": "permission group",
                    "type": "string",
                    "example": "admin"
                },
                "id": {
                    "description": "permission id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "permission name",
                    "type": "string",
                    "example": "updateUser"
                },
                "object": {
                    "description": "define the object will be accessed",
                    "type": "string",
                    "example": "/user/update"
                },
                "tag": {
                    "description": "tag of permissions",
                    "type": "string",
                    "example": "AppAPI"
                }
            }
        },
        "role.RoleInfo": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "role code, must be alpha numeric",
                    "type": "string",
                    "example": "ADMIN"
                },
                "id": {
                    "description": "role id",
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "role name",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "role.UpdatePermOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "type": "string",
                    "example": "updateUser"
                }
            }
        },
        "role.UpdateRoleOption": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 1
                },
                "name": {
                    "description": "role name",
                    "type": "string",
                    "example": "admin"
                }
            }
        },
        "system.PingReply": {
            "type": "object",
            "properties": {
                "reply": {
                    "type": "string",
                    "example": "hello wendy! Now is 2023-10-17 11:07:21.696 +08:00."
                }
            }
        },
        "types.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 2000
                },
                "data": {},
                "err": {
                    "type": "string"
                },
                "msg": {
                    "type": "string",
                    "example": "operation success"
                }
            }
        },
        "user.CreateUserOption": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "new email",
                    "type": "string",
                    "example": "jack@google.com"
                },
                "password": {
                    "description": "new password",
                    "type": "string",
                    "example": "123456"
                },
                "roles": {
                    "description": "new roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "description": "new username",
                    "type": "string",
                    "example": "jack"
                }
            }
        },
        "user.Info": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "integer",
                    "example": 947416200
                },
                "email": {
                    "type": "string",
                    "example": "jacklove@lol.com"
                },
                "roles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/role.RoleInfo"
                    }
                },
                "username": {
                    "type": "string",
                    "example": "jack"
                },
                "uuid": {
                    "type": "string",
                    "example": "55BBA4ED-18D3-790F-EABF-A5330E527586"
                }
            }
        },
        "user.SaveUserDetailOption": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "new email",
                    "type": "string",
                    "example": "jack@google.com"
                },
                "password": {
                    "description": "new password",
                    "type": "string",
                    "example": "123456"
                },
                "roles": {
                    "description": "new roles",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "username": {
                    "description": "new username",
                    "type": "string",
                    "example": "jack"
                },
                "uuid": {
                    "type": "string",
                    "example": "55BBA4ED-18D3-790F-EABF-A5330E527586"
                }
            }
        },
        "user.UpdateInfoOption": {
            "type": "object",
            "properties": {
                "email": {
                    "description": "new email",
                    "type": "string",
                    "example": "jack@google.com"
                },
                "password": {
                    "description": "new password",
                    "type": "string",
                    "example": "123456"
                },
                "username": {
                    "description": "new username",
                    "type": "string",
                    "example": "jack"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfoappapi holds exported Swagger Info so clients can modify it
var SwaggerInfoappapi = &swag.Spec{
	Version:          "v1.0.0",
	Host:             "",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "App Internal API Documentation",
	Description:      "app http api documentation, use the Bearer Token to authenticate\nIt should be noted that when using swagger doc for API debugging, the Token needs to be manually prefixed with Bearer.",
	InfoInstanceName: "appapi",
	SwaggerTemplate:  docTemplateappapi,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfoappapi.InstanceName(), SwaggerInfoappapi)
}
